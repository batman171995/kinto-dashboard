name: Prod Deployment
# including 
# - tag the images and push to asia/eu/us.gcr.io
# - send out slack notifications

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Docker Pull
        uses: kintohub/actions-docker-gcr/pull@v1.4.3
        with:
          gcloud_key: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}
          registry: asia.gcr.io/kinto-tools
          image: kinto-frontend
          new_tag: ${{ env.RELEASE_VERSION }}
      - name: Docker Push (Asia)
        uses: kintohub/actions-docker-gcr/push@v1.4.3
        with:
          gcloud_key: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}
          registry: asia.gcr.io/kinto-tools
          new_registry: asia.gcr.io/kinto-tools
          image: kinto-frontend
          tag: ${{ env.RELEASE_VERSION }}
          latest: false
      - name: Docker Push (US)
        uses: kintohub/actions-docker-gcr/push@v1.4.3
        with:
          gcloud_key: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}
          registry: asia.gcr.io/kinto-tools
          new_registry: us.gcr.io/kinto-tools
          image: kinto-frontend
          tag: ${{ env.RELEASE_VERSION }}
          latest: false
      - name: Docker Push (EU)
        uses: kintohub/actions-docker-gcr/push@v1.4.3
        with:
          gcloud_key: ${{ secrets.GCLOUD_SERVICE_ACCOUNT_KEY }}
          registry: asia.gcr.io/kinto-tools
          new_registry: eu.gcr.io/kinto-tools
          image: kinto-frontend
          tag: ${{ env.RELEASE_VERSION }}
          latest: false
          
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@master
        if: ${{ success() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_DEPLOY_WEBHOOK }}
          SLACK_CHANNEL: deployment
          SLACK_USERNAME: GithubDeployBot
          SLACK_MESSAGE: 'Version ${{ env.RELEASE_VERSION }} successfully pushed to EU/Asia/US'
          SLACK_TITLE: Production Version Tagged
          SLACK_COLOR: good
      - name: Slack Notification (Failed)
        uses: rtCamp/action-slack-notify@master
        if: ${{ failure() }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_DEPLOY_WEBHOOK }}
          SLACK_CHANNEL: deployment
          SLACK_USERNAME: GithubDeployBot
          SLACK_MESSAGE: 'Cannot build image for version ${{ env.RELEASE_VERSION }}. SHA:${{ github.sha }}'
          SLACK_TITLE: Production Tag Failed
          SLACK_COLOR: bad


